[2025-01-04 18:27:30] 开始处理任务
[2025-01-04 18:27:30] 使用配置文件: C:\computer\3\itproject\digitaltool\file\sync\out\20250104182730_MniM\20250104182730_MniM.yaml
add ffmpeg to path
Loads checkpoint by local backend from path: ./models/dwpose/dw-ll_ucoco_384.pth
cuda start
C:\ProgramData\miniconda3\envs\musetalk\lib\site-packages\torch\utils\_contextlib.py:125: UserWarning: Decorating classes is deprecated and will be disabled in future versions. You should only decorate functions or methods. To preserve the current behavior of class decoration, you can directly decorate the `__init__` method and nothing else.
  warnings.warn("Decorating classes is deprecated and will be disabled in "
{'20250104120036_fixp': {'preparation': False, 'bbox_shift': 5, 'video_path': 'C:\\computer\\3\\itproject\\digitaltool\\file\\train\\20250104120036_fixp\\20250104120036_fixp.mp4', 'audio_clips': {'audio_0': 'C:\\computer\\3\\itproject\\digitaltool\\file\\sync\\out\\20250104182730_MniM\\20250104182730_MniM.wav'}}}
TensorFlow GPU is available.
PyTorch GPU is available.
Num GPUs Available:  1
avatar_path---------------------: C:\computer\3\itproject\manyaitools_modules\MuseTalk\results\20250104120036_fixp
reading images...
  0%|          | 0/600 [00:00<?, ?it/s]  2%|▏         | 9/600 [00:00<00:06, 89.45it/s]  3%|▎         | 18/600 [00:00<00:06, 89.16it/s]  5%|▍         | 28/600 [00:00<00:06, 89.80it/s]  6%|▋         | 38/600 [00:00<00:06, 90.07it/s]  8%|▊         | 48/600 [00:00<00:06, 90.08it/s] 10%|▉         | 58/600 [00:00<00:06, 89.36it/s] 11%|█         | 67/600 [00:00<00:06, 88.74it/s] 13%|█▎        | 76/600 [00:00<00:05, 88.72it/s] 14%|█▍        | 85/600 [00:00<00:05, 88.83it/s] 16%|█▌        | 94/600 [00:01<00:05, 88.15it/s] 17%|█▋        | 103/600 [00:01<00:05, 87.43it/s] 19%|█▊        | 112/600 [00:01<00:05, 87.78it/s] 20%|██        | 121/600 [00:01<00:05, 88.00it/s] 22%|██▏       | 130/600 [00:01<00:05, 86.30it/s] 23%|██▎       | 139/600 [00:01<00:05, 86.12it/s] 25%|██▍       | 148/600 [00:01<00:05, 86.57it/s] 26%|██▌       | 157/600 [00:01<00:05, 87.07it/s] 28%|██▊       | 166/600 [00:01<00:04, 86.91it/s] 29%|██▉       | 176/600 [00:01<00:04, 88.16it/s] 31%|███       | 185/600 [00:02<00:04, 88.23it/s] 32%|███▏      | 194/600 [00:02<00:04, 85.61it/s] 34%|███▍      | 203/600 [00:02<00:04, 84.68it/s] 35%|███▌      | 212/600 [00:02<00:04, 84.99it/s] 37%|███▋      | 221/600 [00:02<00:04, 85.44it/s] 38%|███▊      | 230/600 [00:02<00:04, 85.77it/s] 40%|███▉      | 239/600 [00:02<00:04, 85.74it/s] 41%|████▏     | 248/600 [00:02<00:04, 85.01it/s] 43%|████▎     | 257/600 [00:02<00:04, 85.32it/s] 44%|████▍     | 266/600 [00:03<00:03, 85.49it/s] 46%|████▌     | 275/600 [00:03<00:03, 85.25it/s] 47%|████▋     | 284/600 [00:03<00:03, 85.40it/s] 49%|████▉     | 293/600 [00:03<00:03, 86.30it/s] 50%|█████     | 303/600 [00:03<00:03, 87.57it/s] 52%|█████▏    | 313/600 [00:03<00:03, 88.10it/s] 54%|█████▎    | 322/600 [00:03<00:03, 87.95it/s] 55%|█████▌    | 331/600 [00:03<00:03, 86.89it/s] 57%|█████▋    | 340/600 [00:03<00:03, 84.97it/s] 58%|█████▊    | 349/600 [00:04<00:02, 85.42it/s] 60%|█████▉    | 358/600 [00:04<00:02, 85.52it/s] 61%|██████    | 367/600 [00:04<00:02, 85.23it/s] 63%|██████▎   | 376/600 [00:04<00:02, 84.66it/s] 64%|██████▍   | 385/600 [00:04<00:02, 85.32it/s] 66%|██████▌   | 394/600 [00:04<00:02, 85.44it/s] 67%|██████▋   | 403/600 [00:04<00:02, 85.28it/s] 69%|██████▊   | 412/600 [00:04<00:02, 85.49it/s] 70%|███████   | 421/600 [00:04<00:02, 86.29it/s] 72%|███████▏  | 430/600 [00:04<00:01, 87.12it/s] 73%|███████▎  | 440/600 [00:05<00:01, 88.31it/s] 75%|███████▍  | 449/600 [00:05<00:01, 88.60it/s] 76%|███████▋  | 458/600 [00:05<00:01, 85.45it/s] 78%|███████▊  | 467/600 [00:05<00:01, 86.07it/s] 79%|███████▉  | 476/600 [00:05<00:01, 84.76it/s] 81%|████████  | 485/600 [00:05<00:01, 85.96it/s] 82%|████████▏ | 494/600 [00:05<00:01, 85.94it/s] 84%|████████▍ | 503/600 [00:05<00:01, 85.88it/s] 85%|████████▌ | 512/600 [00:05<00:01, 85.79it/s] 87%|████████▋ | 521/600 [00:06<00:00, 86.34it/s] 88%|████████▊ | 530/600 [00:06<00:00, 86.85it/s] 90%|████████▉ | 539/600 [00:06<00:00, 87.48it/s] 91%|█████████▏| 548/600 [00:06<00:00, 87.49it/s] 93%|█████████▎| 557/600 [00:06<00:00, 87.50it/s] 94%|█████████▍| 567/600 [00:06<00:00, 88.57it/s] 96%|█████████▌| 577/600 [00:06<00:00, 89.80it/s] 98%|█████████▊| 586/600 [00:06<00:00, 89.19it/s] 99%|█████████▉| 595/600 [00:06<00:00, 86.17it/s]100%|██████████| 600/600 [00:06<00:00, 86.74it/s]
reading images...
  0%|          | 0/600 [00:00<?, ?it/s] 17%|█▋        | 100/600 [00:00<00:00, 993.32it/s] 33%|███▎      | 200/600 [00:00<00:00, 975.55it/s] 50%|████▉     | 298/600 [00:00<00:00, 944.82it/s] 66%|██████▌   | 393/600 [00:00<00:00, 908.91it/s] 82%|████████▏ | 490/600 [00:00<00:00, 927.87it/s] 99%|█████████▉| 593/600 [00:00<00:00, 958.36it/s]100%|██████████| 600/600 [00:00<00:00, 949.85it/s]
Inferring using: C:\computer\3\itproject\digitaltool\file\sync\out\20250104182730_MniM\20250104182730_MniM.wav
start inference
start fps: 30
video in 30 FPS, audio idx in 50FPS
processing audio:C:\computer\3\itproject\digitaltool\file\sync\out\20250104182730_MniM\20250104182730_MniM.wav costs 506.09397888183594ms
155
Processing batch 0,155
mask_array.shape: (480, 480, 3)
mask_array.dtype: uint8
mask_array.shape: (480, 480, 3)
mask_array.dtype: uint8
mask_array.shape: (484, 484, 3)
mask_array.dtype: uint8
mask_array.shape: (484, 484, 3)
mask_array.dtype: uint8
mask_array.shape: (488, 488, 3)
mask_array.dtype: uint8
mask_array.shape: (492, 492, 3)
mask_array.dtype: uint8
mask_array.shape: (486, 486, 3)
mask_array.dtype: uint8
mask_array.shape: (482, 482, 3)
mask_array.dtype: uint8
mask_array.shape: (486, 486, 3)
mask_array.dtype: uint8
mask_array.shape: (486, 486, 3)
mask_array.dtype: uint8
mask_array.shape: (486, 486, 3)
mask_array.dtype: uint8
mask_array.shape: (494, 494, 3)
mask_array.dtype: uint8
mask_array.shape: (504, 504, 3)
mask_array.dtype: uint8
mask_array.shape: (498, 498, 3)
mask_array.dtype: uint8
mask_array.shape: (488, 488, 3)
mask_array.dtype: uint8
mask_array.shape: (488, 488, 3)
mask_array.dtype: uint8
mask_array.shape: (484, 484, 3)
mask_array.dtype: uint8
mask_array.shape: (484, 484, 3)
mask_array.dtype: uint8
mask_array.shape: (482, 482, 3)
mask_array.dtype: uint8
mask_array.shape: (476, 476, 3)
mask_array.dtype: uint8
mask_array.shape: (472, 472, 3)
mask_array.dtype: uint8
mask_array.shape: (472, 472, 3)
mask_array.dtype: uint8
mask_array.shape: (472, 472, 3)
mask_array.dtype: uint8
mask_array.shape: (460, 460, 3)
mask_array.dtype: uint8
mask_array.shape: (460, 460, 3)
mask_array.dtype: uint8
mask_array.shape: (450, 450, 3)
mask_array.dtype: uint8
mask_array.shape: (448, 448, 3)
mask_array.dtype: uint8
mask_array.shape: (448, 448, 3)
mask_array.dtype: uint8
mask_array.shape: (448, 448, 3)
mask_array.dtype: uint8
mask_array.shape: (438, 438, 3)
mask_array.dtype: uint8
mask_array.shape: (438, 438, 3)
mask_array.dtype: uint8
mask_array.shape: (434, 434, 3)
mask_array.dtype: uint8
mask_array.shape: (438, 438, 3)
mask_array.dtype: uint8
mask_array.shape: (438, 438, 3)
mask_array.dtype: uint8
mask_array.shape: (438, 438, 3)
mask_array.dtype: uint8
mask_array.shape: (444, 444, 3)
mask_array.dtype: uint8
mask_array.shape: (448, 448, 3)
mask_array.dtype: uint8
mask_array.shape: (448, 448, 3)
mask_array.dtype: uint8
mask_array.shape: (452, 452, 3)
mask_array.dtype: uint8
mask_array.shape: (452, 452, 3)
mask_array.dtype: uint8
mask_array.shape: (458, 458, 3)
mask_array.dtype: uint8
mask_array.shape: (462, 462, 3)
mask_array.dtype: uint8
mask_array.shape: (462, 462, 3)
mask_array.dtype: uint8
mask_array.shape: (468, 468, 3)
mask_array.dtype: uint8
mask_array.shape: (472, 472, 3)
mask_array.dtype: uint8
mask_array.shape: (472, 472, 3)
mask_array.dtype: uint8
mask_array.shape: (484, 484, 3)
mask_array.dtype: uint8
mask_array.shape: (488, 488, 3)
mask_array.dtype: uint8
mask_array.shape: (488, 488, 3)
mask_array.dtype: uint8
mask_array.shape: (494, 494, 3)
mask_array.dtype: uint8
mask_array.shape: (492, 492, 3)
mask_array.dtype: uint8
mask_array.shape: (492, 492, 3)
mask_array.dtype: uint8
mask_array.shape: (504, 504, 3)
mask_array.dtype: uint8
mask_array.shape: (498, 498, 3)
mask_array.dtype: uint8
mask_array.shape: (498, 498, 3)
mask_array.dtype: uint8
mask_array.shape: (494, 494, 3)
mask_array.dtype: uint8
mask_array.shape: (488, 488, 3)
mask_array.dtype: uint8
mask_array.shape: (488, 488, 3)
mask_array.dtype: uint8
mask_array.shape: (488, 488, 3)
mask_array.dtype: uint8
mask_array.shape: (476, 476, 3)
mask_array.dtype: uint8
mask_array.shape: (472, 472, 3)
mask_array.dtype: uint8
mask_array.shape: (476, 476, 3)
mask_array.dtype: uint8
mask_array.shape: (472, 472, 3)
mask_array.dtype: uint8
mask_array.shape: (472, 472, 3)
mask_array.dtype: uint8
mask_array.shape: (472, 472, 3)
mask_array.dtype: uint8
mask_array.shape: (468, 468, 3)
mask_array.dtype: uint8
mask_array.shape: (472, 472, 3)
mask_array.dtype: uint8
mask_array.shape: (468, 468, 3)
mask_array.dtype: uint8
mask_array.shape: (468, 468, 3)
mask_array.dtype: uint8
mask_array.shape: (468, 468, 3)
mask_array.dtype: uint8
mask_array.shape: (458, 458, 3)
mask_array.dtype: uint8
mask_array.shape: (458, 458, 3)
mask_array.dtype: uint8
mask_array.shape: (458, 458, 3)
mask_array.dtype: uint8
mask_array.shape: (452, 452, 3)
mask_array.dtype: uint8
mask_array.shape: (450, 450, 3)
mask_array.dtype: uint8
mask_array.shape: (450, 450, 3)
mask_array.dtype: uint8
mask_array.shape: (440, 440, 3)
mask_array.dtype: uint8
mask_array.shape: (440, 440, 3)
mask_array.dtype: uint8
mask_array.shape: (446, 446, 3)
mask_array.dtype: uint8
mask_array.shape: (446, 446, 3)
mask_array.dtype: uint8
mask_array.shape: (440, 440, 3)
mask_array.dtype: uint8
mask_array.shape: (440, 440, 3)
mask_array.dtype: uint8
mask_array.shape: (446, 446, 3)
mask_array.dtype: uint8
mask_array.shape: (446, 446, 3)
mask_array.dtype: uint8
mask_array.shape: (440, 440, 3)
mask_array.dtype: uint8
mask_array.shape: (440, 440, 3)
mask_array.dtype: uint8
mask_array.shape: (440, 440, 3)
mask_array.dtype: uint8
mask_array.shape: (440, 440, 3)
mask_array.dtype: uint8
mask_array.shape: (446, 446, 3)
mask_array.dtype: uint8
mask_array.shape: (446, 446, 3)
mask_array.dtype: uint8
mask_array.shape: (440, 440, 3)
mask_array.dtype: uint8
mask_array.shape: (448, 448, 3)
mask_array.dtype: uint8
mask_array.shape: (448, 448, 3)
mask_array.dtype: uint8
mask_array.shape: (448, 448, 3)
mask_array.dtype: uint8
mask_array.shape: (452, 452, 3)
mask_array.dtype: uint8
mask_array.shape: (448, 448, 3)
mask_array.dtype: uint8
Processing batch 25,155
mask_array.shape: (448, 448, 3)
mask_array.dtype: uint8
mask_array.shape: (446, 446, 3)
mask_array.dtype: uint8
mask_array.shape: (446, 446, 3)
mask_array.dtype: uint8
mask_array.shape: (446, 446, 3)
mask_array.dtype: uint8
mask_array.shape: (450, 450, 3)
mask_array.dtype: uint8
mask_array.shape: (452, 452, 3)
mask_array.dtype: uint8
mask_array.shape: (452, 452, 3)
mask_array.dtype: uint8
mask_array.shape: (448, 448, 3)
mask_array.dtype: uint8
mask_array.shape: (448, 448, 3)
mask_array.dtype: uint8
mask_array.shape: (448, 448, 3)
mask_array.dtype: uint8
mask_array.shape: (452, 452, 3)
mask_array.dtype: uint8
mask_array.shape: (448, 448, 3)
mask_array.dtype: uint8
mask_array.shape: (452, 452, 3)
mask_array.dtype: uint8
mask_array.shape: (452, 452, 3)
mask_array.dtype: uint8
mask_array.shape: (452, 452, 3)
mask_array.dtype: uint8
mask_array.shape: (452, 452, 3)
mask_array.dtype: uint8
mask_array.shape: (452, 452, 3)
mask_array.dtype: uint8
mask_array.shape: (458, 458, 3)
mask_array.dtype: uint8
mask_array.shape: (462, 462, 3)
mask_array.dtype: uint8
mask_array.shape: (462, 462, 3)
mask_array.dtype: uint8
mask_array.shape: (462, 462, 3)
mask_array.dtype: uint8
mask_array.shape: (462, 462, 3)
mask_array.dtype: uint8
mask_array.shape: (468, 468, 3)
mask_array.dtype: uint8
mask_array.shape: (468, 468, 3)
mask_array.dtype: uint8
mask_array.shape: (468, 468, 3)
mask_array.dtype: uint8
mask_array.shape: (462, 462, 3)
mask_array.dtype: uint8
mask_array.shape: (462, 462, 3)
mask_array.dtype: uint8
mask_array.shape: (462, 462, 3)
mask_array.dtype: uint8
mask_array.shape: (468, 468, 3)
mask_array.dtype: uint8
mask_array.shape: (468, 468, 3)
mask_array.dtype: uint8
mask_array.shape: (468, 468, 3)
mask_array.dtype: uint8
mask_array.shape: (462, 462, 3)
mask_array.dtype: uint8
mask_array.shape: (462, 462, 3)
mask_array.dtype: uint8
mask_array.shape: (462, 462, 3)
mask_array.dtype: uint8
mask_array.shape: (462, 462, 3)
mask_array.dtype: uint8
mask_array.shape: (468, 468, 3)
mask_array.dtype: uint8
mask_array.shape: (468, 468, 3)
mask_array.dtype: uint8
mask_array.shape: (468, 468, 3)
mask_array.dtype: uint8
mask_array.shape: (472, 472, 3)
mask_array.dtype: uint8
mask_array.shape: (472, 472, 3)
mask_array.dtype: uint8
mask_array.shape: (476, 476, 3)
mask_array.dtype: uint8
mask_array.shape: (480, 480, 3)
mask_array.dtype: uint8
mask_array.shape: (484, 484, 3)
mask_array.dtype: uint8
mask_array.shape: (480, 480, 3)
mask_array.dtype: uint8
mask_array.shape: (484, 484, 3)
mask_array.dtype: uint8
mask_array.shape: (484, 484, 3)
mask_array.dtype: uint8
mask_array.shape: (480, 480, 3)
mask_array.dtype: uint8
mask_array.shape: (480, 480, 3)
mask_array.dtype: uint8
mask_array.shape: (480, 480, 3)
mask_array.dtype: uint8
mask_array.shape: (480, 480, 3)
mask_array.dtype: uint8
mask_array.shape: (472, 472, 3)
mask_array.dtype: uint8
mask_array.shape: (472, 472, 3)
mask_array.dtype: uint8
mask_array.shape: (472, 472, 3)
mask_array.dtype: uint8
mask_array.shape: (468, 468, 3)
mask_array.dtype: uint8
mask_array.shape: (468, 468, 3)
mask_array.dtype: uint8
mask_array.shape: (468, 468, 3)
mask_array.dtype: uint8
mask_array.shape: (468, 468, 3)
mask_array.dtype: uint8
mask_array.shape: (468, 468, 3)
mask_array.dtype: uint8
Total process time of 155 frames including saving images = 8.722662925720215s
-------------------------------------------------------------------------------------------------out_vid_name audio_0
ffmpeg -y -v warning -r 30 -f image2 -i C:\computer\3\itproject\manyaitools_modules\MuseTalk\results\20250104120036_fixp/tmp/%08d.png -vcodec libx264 -vf format=rgb24,scale=out_color_matrix=bt709,format=yuv420p -crf 18 C:\computer\3\itproject\manyaitools_modules\MuseTalk\results\20250104120036_fixp/temp.mp4
ffmpeg -y -v warning -i C:\computer\3\itproject\digitaltool\file\sync\out\20250104182730_MniM\20250104182730_MniM.wav -i C:\computer\3\itproject\manyaitools_modules\MuseTalk\results\20250104120036_fixp/temp.mp4 C:\computer\3\itproject\manyaitools_modules\MuseTalk\results\20250104120036_fixp/vid_output/audio_0.mp4
[aist#0:0/pcm_s16le @ 0000018c63580c00] Guessed Channel Layout: stereo
result is save to C:\computer\3\itproject\manyaitools_modules\MuseTalk\results\20250104120036_fixp/vid_output/audio_0.mp4
args.save_path: C:\computer\3\itproject\digitaltool\file\sync\out\20250104182730_MniM\20250104182730_MniM_output.mp4


[0m